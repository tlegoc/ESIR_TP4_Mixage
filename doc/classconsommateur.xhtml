<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>MixageSonore: Référence de la classe consommateur</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MixageSonore
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Recherche');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Page&#160;principale</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Recherche" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Liste&#160;des&#160;classes</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Hiérarchie&#160;des&#160;classes</span></a></li>
      <li><a href="functions.xhtml"><span>Membres&#160;de&#160;classe</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classconsommateur.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Tout</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Fonctions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="classconsommateur-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle">
<div class="title">Référence de la classe consommateur<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface d'un consommateur d'échantillons sonores. Il s'agit d'une interface décrivant un composant qui ne possède que des entrées.  
 <a href="classconsommateur.xhtml#details">Plus de détails...</a></p>

<p><code>#include &lt;consommateur.h&gt;</code></p>
<div class="dynheader">
Graphe d'héritage de consommateur:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classconsommateur.png" usemap="#consommateur_map" alt=""/>
  <map id="consommateur_map" name="consommateur_map">
<area href="classcomposant.xhtml" title="Interface d&#39;un composant du systeme sonore. " alt="composant" shape="rect" coords="167,0,324,24"/>
<area href="classenregistreur__fichier.xhtml" title="Un consommateur qui enregistre ses entrées dans un fichier binaire ; 44100 Hz, 16bits signé..." alt="enregistreur_fichier" shape="rect" coords="0,112,157,136"/>
<area href="classenregistreur__fichier__texte.xhtml" title="Un consommateur qui enregistre ses entrées dans un fichier texte ; une ligne = un échantillon de chaq..." alt="enregistreur_fichier_texte" shape="rect" coords="167,112,324,136"/>
<area href="classfiltre.xhtml" title="Interface associée à un filtre sonore. Ce filtre est considéré comme un producteur / consommateur d&#39;é..." alt="filtre" shape="rect" coords="334,112,491,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:a9a756f15381056cd7917a8022d405251"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9a756f15381056cd7917a8022d405251"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classconsommateur.xhtml#a9a756f15381056cd7917a8022d405251">~consommateur</a> ()</td></tr>
<tr class="memdesc:a9a756f15381056cd7917a8022d405251"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructeur virtuel. <br /></td></tr>
<tr class="separator:a9a756f15381056cd7917a8022d405251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa06328f3002f14b5ff83e393e7e4761a"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classconsommateur.xhtml#aa06328f3002f14b5ff83e393e7e4761a">nbEntrees</a> () const =0</td></tr>
<tr class="memdesc:aa06328f3002f14b5ff83e393e7e4761a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renvoie le nombre d'entrees du composant.  <a href="#aa06328f3002f14b5ff83e393e7e4761a">Plus de détails...</a><br /></td></tr>
<tr class="separator:aa06328f3002f14b5ff83e393e7e4761a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe46cbb49412ede4091ba5d19ff5475b"><td class="memItemLeft" align="right" valign="top">virtual const std::shared_ptr<br class="typebreak" />
&lt; <a class="el" href="classflot.xhtml">flot</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classconsommateur.xhtml#afe46cbb49412ede4091ba5d19ff5475b">getEntree</a> (unsigned int numentree) const =0</td></tr>
<tr class="memdesc:afe46cbb49412ede4091ba5d19ff5475b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Récupération d'une entrée du composant.  <a href="#afe46cbb49412ede4091ba5d19ff5475b">Plus de détails...</a><br /></td></tr>
<tr class="separator:afe46cbb49412ede4091ba5d19ff5475b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade06318807a8d3d486d5a86d4f5011f2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classconsommateur.xhtml#ade06318807a8d3d486d5a86d4f5011f2">connecterEntree</a> (const std::shared_ptr&lt; <a class="el" href="classflot.xhtml">flot</a> &gt; &amp;f, unsigned int numentree)=0</td></tr>
<tr class="memdesc:ade06318807a8d3d486d5a86d4f5011f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connecte une entrée sur ce composant.  <a href="#ade06318807a8d3d486d5a86d4f5011f2">Plus de détails...</a><br /></td></tr>
<tr class="separator:ade06318807a8d3d486d5a86d4f5011f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8622fe9e8e5baa1a7b152fce88b8be89"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classconsommateur.xhtml#a8622fe9e8e5baa1a7b152fce88b8be89">yaDesEchantillons</a> () const =0</td></tr>
<tr class="memdesc:a8622fe9e8e5baa1a7b152fce88b8be89"><td class="mdescLeft">&#160;</td><td class="mdescRight">déterminer si chaque entrée possède au moins un échantillon  <a href="#a8622fe9e8e5baa1a7b152fce88b8be89">Plus de détails...</a><br /></td></tr>
<tr class="separator:a8622fe9e8e5baa1a7b152fce88b8be89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classcomposant"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classcomposant')"><img src="closed.png" alt="-"/>&#160;Fonctions membres publiques hérités de <a class="el" href="classcomposant.xhtml">composant</a></td></tr>
<tr class="memitem:add8126876f9df35cc359f887396f0966 inherit pub_methods_classcomposant"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcomposant.xhtml#add8126876f9df35cc359f887396f0966">~composant</a> ()</td></tr>
<tr class="memdesc:add8126876f9df35cc359f887396f0966 inherit pub_methods_classcomposant"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finaliser.  <a href="#add8126876f9df35cc359f887396f0966">Plus de détails...</a><br /></td></tr>
<tr class="separator:add8126876f9df35cc359f887396f0966 inherit pub_methods_classcomposant"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a257333d140850f51be479b025ce1e540 inherit pub_methods_classcomposant"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a257333d140850f51be479b025ce1e540"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcomposant.xhtml#a257333d140850f51be479b025ce1e540">calculer</a> ()=0</td></tr>
<tr class="memdesc:a257333d140850f51be479b025ce1e540 inherit pub_methods_classcomposant"><td class="mdescLeft">&#160;</td><td class="mdescRight">Effectue les calculs associes au composant. <br /></td></tr>
<tr class="separator:a257333d140850f51be479b025ce1e540 inherit pub_methods_classcomposant"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p>Interface d'un consommateur d'échantillons sonores. Il s'agit d'une interface décrivant un composant qui ne possède que des entrées. </p>
<dl class="section author"><dt>Auteur</dt><dd>Jean Christophe Engel, Fabrice Lamarche, University Of Rennes 1 </dd></dl>
<dl class="section date"><dt>Date</dt><dd>23/04/2010 </dd></dl>
</div><h2 class="groupheader">Documentation des fonctions membres</h2>
<a class="anchor" id="ade06318807a8d3d486d5a86d4f5011f2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void consommateur::connecterEntree </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classflot.xhtml">flot</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>numentree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connecte une entrée sur ce composant. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">f</td><td>Le flot à connecter en entrée du composant. </td></tr>
    <tr><td class="paramname">numentree</td><td>Le numéro de l'entree sur laquelle connecter le flot. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Précondition</dt><dd>0 &lt;= numentree &lt; <a class="el" href="classconsommateur.xhtml#aa06328f3002f14b5ff83e393e7e4761a" title="Renvoie le nombre d&#39;entrees du composant. ">nbEntrees()</a> </dd></dl>

<p>Implémenté dans <a class="el" href="classenregistreur__fichier__texte.xhtml#a6223c48f6afdfabddd72d8535aa49843">enregistreur_fichier_texte</a>, et <a class="el" href="classenregistreur__fichier.xhtml#a24977a2895b3104c4d84f7d6f49b79d2">enregistreur_fichier</a>.</p>

</div>
</div>
<a class="anchor" id="afe46cbb49412ede4091ba5d19ff5475b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::shared_ptr&lt; <a class="el" href="classflot.xhtml">flot</a> &gt; &amp; consommateur::getEntree </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>numentree</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Récupération d'une entrée du composant. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">numentree</td><td>Le numero de l'entrée à récuperer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Précondition</dt><dd>0 &lt;= numentree &lt; <a class="el" href="classconsommateur.xhtml#aa06328f3002f14b5ff83e393e7e4761a" title="Renvoie le nombre d&#39;entrees du composant. ">nbEntrees()</a> </dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>L'entrée demandée. </dd></dl>

<p>Implémenté dans <a class="el" href="classenregistreur__fichier__texte.xhtml#ae60e233db26cdabcef4236713768eb68">enregistreur_fichier_texte</a>, et <a class="el" href="classenregistreur__fichier.xhtml#a67cdae0c1f789405a48ef4b20d9fc3ec">enregistreur_fichier</a>.</p>

</div>
</div>
<a class="anchor" id="aa06328f3002f14b5ff83e393e7e4761a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int consommateur::nbEntrees </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Renvoie le nombre d'entrees du composant. </p>
<dl class="section return"><dt>Renvoie</dt><dd>Le nombre d'entrees du composant. </dd></dl>

<p>Implémenté dans <a class="el" href="classenregistreur__fichier__texte.xhtml#a0f686274b3cca79fba1d3c2227cd4950">enregistreur_fichier_texte</a>, et <a class="el" href="classenregistreur__fichier.xhtml#a46b864aea1016ecef695e085870706af">enregistreur_fichier</a>.</p>

</div>
</div>
<a class="anchor" id="a8622fe9e8e5baa1a7b152fce88b8be89"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool consommateur::yaDesEchantillons </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>déterminer si chaque entrée possède au moins un échantillon </p>
<dl class="section return"><dt>Renvoie</dt><dd>Vrai si chaque entrée possède au moins un échantillon. </dd></dl>

<p>Implémenté dans <a class="el" href="classenregistreur__fichier__texte.xhtml#ac412238ca34c019727aa6ddfbe9ae56e">enregistreur_fichier_texte</a>, et <a class="el" href="classenregistreur__fichier.xhtml#a1f20e9ef18665e9b3714d067b573a9de">enregistreur_fichier</a>.</p>

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir du fichier suivant :<ul>
<li>include/consommateur.h</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="classconsommateur.xhtml">consommateur</a></li>
    <li class="footer">Généré par
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.7 </li>
  </ul>
</div>
</body>
</html>
